{
    parserClass="org.intellij.sdk.language.parser.VParser"

    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="V"
    psiImplClassSuffix="Impl"
    psiPackage="org.intellij.sdk.language.psi"
    psiImplPackage="org.intellij.sdk.language.psi.impl"

    elementTypeHolderClass="org.intellij.sdk.language.psi.VTypes"
    elementTypeClass="org.intellij.sdk.language.psi.VElementType"
    tokenTypeClass="org.intellij.sdk.language.psi.VTokenType"

//  psiImplUtilClass="org.intellij.sdk.language.psi.impl.VPsiImplUtil"

    tokens = [
        IDENT = "regexp:[A-Za-z_][A-Za-z0-9_]*}"
        space = "regexp:\s+"
        COMMENT_LINE = "regexp://.*$"
        COMMENT_MULTILINE = "regexp:/\*.*\*/"
        NUMBER_LITERAL = "regexp:(\+|\-)?(0b[01_]+|0o[0-7_]+|0x[a-fA-f\d_]+|[\d_]+)(\.[\d_]+)?(e[-+]?[\d_]+)?"
        CHAR_LITERAL   = "regexp:('([^'\\]|\\.)*')"
    ]


}

vFile ::= item*

private item ::= var

varType ::= "i128" | "i64" | "int" | "i16" | "i8"
            | "u128" | "u64" | "u32" | "u16" | "u8"
            | "bool" | "rune" | "f32" | "f64" | "string"
            | "bytexpr" | "voidptr"

var ::= [ "mut" ] IDENT ":=" valueAffectation
valueAffectation ::= constantValue | array | map
constantValue ::= NUMBER_LITERAL | CHAR_LITERAL | "true" | "false"
array ::= "[" [ { arrayValues } ] "]"
arrayValues ::= constantValue [ "," constantValue ]
map ::= "map[string]" varType